/*
 * Avatar Libraries REST API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * OpenAPI generator version: 7.3.0-SNAPSHOT
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

import * as testdata from "../common/testdata.js";

const ENV_BASE_URL = __ENV.ENVIRONMENT_URL;

// Options
// For more info, see: 
//  * https://k6.io/docs/test-types/smoke-testing/
//  * https://k6.io/docs/getting-started/running-k6/#using-options
export let options = {
  vus: 1
};

// Sleep duration between successive requests.
const SLEEP_DURATION = 0.1;

export default function (data) {

    let params = {
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
    };
        
    group("/Patient", () => {
		
		// CREATE
		{			
			console.log('Creating Patient...');
			
			let url = ENV_BASE_URL + `/Patient`;
			
			let body = testdata.createPatient;
			
			let request = http.post(url, JSON.stringify(body), params);
        
			check(request, {
				"Patient created successfully": (r) => r.status === 200
			});
        
			sleep(SLEEP_DURATION);
	    }	    
	    
	    // READ
		{
			console.log('Retrieving Patient...');
			
			let patientId = testdata.patientId;
			
			let url = ENV_BASE_URL + `/Patient/${patientId}`;
			
			let request = http.get(url, params);
        
			check(request, {
				"Patient retrieved successfully": (r) => r.status === 200
			});
        
			sleep(SLEEP_DURATION);
	    }	    
	    
	    // UPDATE
		{
			console.log('Updating Patient...');
			
			let patientId = testdata.patientId;
			
			let url = ENV_BASE_URL + `/Patient/${patientId}`;
			
			let body = testdata.updatePatient;
			
			let request = http.put(url, JSON.stringify(body), params);
        
			check(request, {
				"Patient updated successfully": (r) => r.status === 200
			});
        
			sleep(SLEEP_DURATION);
	    }
	    
	    // DELETE
	    {
			console.log('Deleting Patient...');
			
			let patientId = testdata.patientId;
			
			let url = ENV_BASE_URL + `/Patient/${patientId}`;
			
			let request = http.del(url, params);
        
			check(request, {
				"Patient deleted successfully": (r) => r.status === 200
			});
        
			sleep(SLEEP_DURATION);
		}
    });
}
