{{>licenseInfo}}

import http from "k6/http";
import { group, check, sleep } from "k6";

import * as testdata from {{{testDataScriptPath}}};

const ENV_BASE_URL = __ENV.ENVIRONMENT_URL;

// Options
// For more info, see: 
//  * https://k6.io/docs/test-types/smoke-testing/
//  * https://k6.io/docs/getting-started/running-k6/#using-options
export let options = {
  vus: 1,
  duration: '30s',
  thresholds: {
    http_req_duration: ['p(99)<6000'], // 99% of requests must complete below 6.0s
    // http_req_duration: ['p(99)<1500'], // 99% of requests must complete below 1.5s - not on current server, it is too slow!!
  } 
};

// Sleep duration between successive requests.
const SLEEP_DURATION = 0.1;

export default function (data) {

    let params = {
        headers: {
            'Content-Type': 'application/json',
        },
    }; 

    {{#requestGroups}}
    group("{{{groupName}}}", () => {
        
        {{#variables}}
        let {{{key}}} = testdata.{{#lambda.camelcase}}{{{groupName}}}{{/lambda.camelcase}}.{{{key}}};
        {{/variables}}
        
        {{#requests}}
        {{#-first}}
        let url = ENV_BASE_URL + `{{{path}}}{{=<% %>=}}<%#query%><%#-first%>?<%/-first%><%& key%>=<%& value%><%^-last%>&<%/-last%><%/query%><%={{ }}=%>`;
        
        // Request No. {{-index}}
        {{#body}}
        let body = testdata.{{#lambda.camelcase}}{{{groupName}}}{{/lambda.camelcase}};
        {{/body}}
        
        let request = http.{{method}}(url{{#body}}, body{{/body}}, params);
        
        {{#k6Checks}}
        {{#-first}}        
        {{=<% %>=}}
        check(request, {
            "<%& description%>": (r) => r.status === <%& status%>
        });
        <%={{ }}=%>
        {{/-first}}
        {{/k6Checks}}
        {{/-first}}
        {{^-first}}
        // Request No. {{-index}}
        {{#body}}
        let body = testdata.{{#lambda.camelcase}}{{{groupName}}}{{/lambda.camelcase}};
        {{/body}}
        
        request = http.{{method}}(url{{#body}}, body{{/body}}{{#params}}, params{{/params}});
        {{#k6Checks}}
        {{=<% %>=}}
        check(request, {
            "<%& description%>": (r) => r.status === <%& status%>
        });
        <%={{ }}=%>
        {{/k6Checks}}
        {{/-first}}
        sleep(SLEEP_DURATION);
        {{^-last}}

        {{/-last}}
        {{/requests}}
    });
    {{/requestGroups}}
}
